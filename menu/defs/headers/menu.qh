/*
battleMETAL
  author: Peter Roohr
  date: 04/11/2018
  overview: header for menu system
*/
//MENU GLOBALS
float MOUSE_DOWN;
float DRAW_MOUSE;
float M_STATE;
entity MOUSE_TARGET;
float SUB_MENU; //can only really do 1 sub menu at a time, so

float MOUSE_DOWN_COUNT;

//MENU STATE CONSTANTS
#define M_NONE 0
#define M_MAIN 1
#define M_SINGLE 2
#define M_NEWGAME 3
#define M_LOAD 4
#define M_SAVE 5
#define M_MULTI 6
#define M_SETUP 7
#define M_HOST 8
#define M_JOIN 9
#define M_OPTIONS 10
#define M_OPTIONS_CONTROLS 11
#define M_OPTIONS_GRAPHICS 12
#define M_OPTIONS_AUDIO 13
#define M_OPTIONS_GAMEPLAY 14
#define M_OPTIONS_EFFECT 15
#define M_OPTIONS_GFX 16
#define M_OPTIONS_COLOR 17
#define M_KEYS 18
#define M_VIDEO 19
#define M_RESET 20
#define M_MODS  21
#define M_HELP 22
#define M_CREDITS 23
#define M_NEWSAVE 24
#define M_TRAINING 25

float MAIN_MISSION;

float drawfont_prev;
float FONT_NUM_ROBOT_LIGHT;
float FONT_NUM_ROBOT_THIN;
float FONT_NUM_ROBOT_REGULAR;
float FONT_NUM_ROBOT_MEDIUM;
float FONT_NUM_DYSTOPIAN;

string MAPS_COOP[128];
string MAPS_TDM[128];

float MOUSE_DOWN_RATE = 0.15;

void(float drawmous) m_drawmouse;

//see /menus/m_main.qc for info on these '_x' functions
void() m_main_i;
void() m_camp_i;
  void() m_newg_i;
  void() m_load_i;
void() m_multi_i;
  void() m_setup_i;
  void() m_host_i;
  void() m_join_i;
void() m_options_i;
  void() m_controls_i;
  void() m_graphics_i;
  void() m_effects_i;
  void() m_gfx_i;

void() m_credits_i;
void() m_help_i;
void() m_train_i;

void() m_main_f;
void() m_camp_f;
  void() m_newsave_f;
    void() m_newg_f;
  void() m_load_f;
  void() m_save_f;
  
void() m_multi_f;
  void() m_setup_f;
  void() m_host_f;
  void() m_join_f;
void() m_options_f;
  void() m_controls_f;
  void() m_controls_f;
  void() m_graphics_f;
  void() m_effects_f;
  void() m_gfx_f;
  void() m_audio_f;
  void() m_gameplay_f;
void() m_credits_f;
void() m_help_f;
void() m_train_f;
  
void() m_main_d;
void() m_camp_d;
  void() m_newsave_d;
    void() m_newg_d;
  void() m_load_d;
  void() m_save_d;
void() m_multi_d;
  void() m_setup_d;
  void() m_host_d;
  void() m_join_d;
void() m_options_d;
  void() m_controls_d;
  void() m_graphics_d;
  void() m_effects_d;
  void() m_gfx_d;
  void() m_audio_d;
  void() m_gameplay_d;
void() m_credits_d;
void() m_help_d;
void() m_train_d;

void(float ky, float ascii) m_main_k;
void(float ky, float ascii) m_camp_k;
  void(float ky, float ascii) m_newsave_k;
    void(float ky, float ascii) m_newg_k;
  void(float ky, float ascii) m_load_k;
  void(float ky, float ascii) m_save_k;
void(float ky, float ascii) m_multi_k;
  void(float ky, float ascii) m_setup_k;
  void(float ky, float ascii) m_host_k;
  void(float ky, float ascii) m_join_k;
void(float ky, float ascii) m_options_k;
  void(float ky, float ascii) m_controls_k;
  void(float ky, float ascii) m_graphics_k;
  void(float ky, float ascii) m_effects_k;
  void(float ky, float ascii) m_gfx_k;
  void(float ky, float ascii) m_audio_k;
  void(float ky, float ascii) m_gameplay_k;
void(float ky, float ascii) m_credits_k;
void(float ky, float ascii) m_help_k;
void(float ky, float ascii) m_train_k;
