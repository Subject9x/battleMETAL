/*
battleMETAL
Author: Peter Roohr
Date: 04/10/2017
Overview: header file for the hud sound system
*/
//sound precache
string NULL_STRING = "null";

string SND_MCH_SFX_REACT;

string SND_HUD_VFX_ONLINE;
string SND_HUD_VFX_ENELOW;
string SND_HUD_VFX_SHDLOW;
string SND_HUD_VFX_RDRACTIVE;
string SND_HUD_VFX_RDRPASSIVE;
string SND_HUD_VFX_CRITARM;
string SND_HUD_VFX_CRITTOR;
string SND_HUD_VFX_CRITLEG;
string SND_HUD_VFX_CRITTONE;
string SND_HUD_VFX_NAVRECH;
string SND_HUD_VFX_TARGKILL;
string SND_HUD_VFX_MSN_WIN;
string SND_HUD_VFX_MSN_FAL;

string SND_HUD_VFX_OBJ_PRIME;
string SND_HUD_VFX_OBJ_SECON;
string SND_HUD_VFX_OBJ_THIRD;
string SND_HUD_VFX_OBJ_FAIL;
//string SND_HUD_VFX_OBJ_FOURT;

string SND_HUD_VFX_WEAPONS_ON;
string SND_HUD_VFX_WEAPONS_OFF;
string SND_HUD_VFX_REPAIRS_ON;
string SND_HUD_VFX_REPAIRS_OFF;

string SND_HUD_VFX_FIREMODE_CHAIN;
string SND_HUD_VFX_FIREMODE_GROUP;

string SND_HUD_SHLD_DN;
string SND_HUD_SHLD_DN_SFX;
string SND_HUD_SHLD_UP_SFX;
string SND_HUD_CRIT_DMG;
string SND_HUD_TRG_NEW;

//Sound Queue globals
float SQSIZE; //set to 6
float STIME;
float STIME_NEXT;
float VQSIZE;
float SQUED;
string SOUNDQUEUE[6]; //match this with SQSIZE / VQSIZE
//float SQ_LAST_IDX;    //index of last sound in array before 'null' values;

float SFX_REACT_TIME; //reactor hum timer

//Transmission Queue - for AI voices
float TRTIME;
float TR_TIME_NEXT;
float TQSIZE;
float TQUED;
string TRANSMISSIONQUEUE[8];
float TRANSMISSIONQUEUE_ENT[8]; //entity ID of speaker

//Voice arrays
string AI_VOICE_A[10];
string AI_VOICE_B[10];
string AI_VOICE_C[10];

void() snd_hud_vfx_frame;
void(string requestedSound, float cnt) snd_hud_vfx_addtoqueue;
void(float voiceGroup, float voiceId, float limitCheck, float entityId) snd_hud_trnsmsn_addtoqueue;

//void(float lockstate) snd_hud_vfx_locklistener;
void(float curEn) snd_hud_vfx_enelistener;
void(float curSh) snd_hud_vfx_shdlistener;
void( string critSound, float limiter ) snd_hud_vfx_criticalHit;
void(float trgArm) snd_hud_vfx_targkill;

//TE SFX
//SFX
void() te_mission_win;
void() te_mission_lose;
void() te_msn_boundary;
void() te_targ_kill;

