/*
battleMETAL
Author: Peter Roohr
Date: 8/27/2016
Overview: client utility methods, pulled from client.qc
this is the header.
*/
/*
  ENGINE CONSTANTS
*/
void() SetChangeParms;
void() SetNewParms;
void() DecodeLevelParms;
entity() SelectSpawnPoint;
//==========================
float(entity piece) csqc_updateCompStat;
//legacy wrappers
void() legacy_PlayerDie;

//spawn spot wrappers
void() sv_select_info_start;
void() spawnpoint_Random;
entity() spawnpoint_coop;

//SendEnt
void() client_push_player_info;
void( entity targetClient ) server_push_player_info; //simply wraps client_push_player_info()
void( entity targetClient ) client_push_hud_highlight;
void( entity targetClient ) client_send_boundary_warning;
void() client_push_mapobjects;
void( float playerId, float playerCritBits ) client_send_critical_hit;
void( entity client, float menuFlag ) client_send_menu_flag;

//client command layer
void(string data) client_parse_clientInfoString;
void(entity client) client_send_server_info_connect;
void( entity client ) client_send_campaign_end_data;
void( entity client ) client_send_dm_end_data;

void() client_sendMissionFileName;
void(string fileName) client_sendAnimaticFileName;
void(entity client, float worldFog, float fogDense, vector fogColor, float fogAlpha, vector fogDist, float fogFade) client_sendFog;
void(entity client, entity cube) client_sendParticleCube;
void(entity client, float trackNum, float entFlags) client_sendMusic;
void(entity client, string theMessage, float messageLifetime) client_send_info_message;
void(entity client, float weaponsOnOff) client_send_event_repairs;

void( entity client, float track, float loopFlag) client_playTrack;
void(string cmd, float tokens) client_setWeapon;
void(float wantNavId) client_setNavPoint;
void(string cmd, float tokens) client_setMission;
void() client_sendIniConfig;

void() client_update_faction;
void() client_update_losses;

void( float particleEffectId, vector particleOrg, vector particleVel, float particleCount ) client_send_particle;
void( float entityId, float particleEffectId, vector particleOrg, vector particleEnd ) client_send_particle_rail;