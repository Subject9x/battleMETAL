// battleMETAL entities
// Peter Roohr
// Entities.def for TrenchBroom/GTKRadiant 1.6
// Version: Beta 1.0.0

/*QUAKED map_terrain_model (0.75 0.2 0.75) (-24 -24 -24) (24 24 24) - OVERRIDE_ALPHA EF_NOSHADOW
  this is for injecting large 3D terrain meshes into a bsp file.
  If a level needs large outdoor terrain pieces, but this right after worldspawn.
  It's origin is set to the world's, SOLID_BSP, MOVETYPE_NONE.
  It's non-damageable, and should never be removed unless there's an express purpose for doing so.
  place at minimum Z that the terrain starts at (ie, the floor).
-------- KEYS --------
.model = <string> [file] - path to the model file
.count1 = <float> [alpha] - 0.001 - 1.0; defaults to '1'
.compOffset = <vector> [Red Green Blue] - color definition 0.0 - 1.0 for each color

-------- SPAWNFLAGS --------
OVERRIDE_ALPHA 2: overrides default alpha of '1'
EF_NOSHADOW 4: puts effect-flag EF_NOSHADOW onto model
*/


/*QUAKED event_lightning (0 1 1) (-16 -16 -16) (16 16 16)
Just for boss level.
*/


/*QUAKED misc_thunder (0 1 0) (-8 -8 -8) (8 8 8)
This controls the brightness of the
targeted lights, to simulate thunder.

Keys:
"waitmin"
 mininum time between strikes
 (default 1)
"waitmax"
 maximum time between strikes
 (default 8)
"count"
 minimum number of flashs per strike
 (default 2)
"count1"
 maximum number of flashs per strike
 (default 6)
"count2"
 minimum time between flashs
 (default 0.05)
"count3"
 maximum time between flashs
 (default 0.2)
"count4"
 how long each flash lasts
 (default 0.3)
"count5"
 minimum sound delay
 (default 0.3)
"count6"
 maximum sound delay
 (default 0.8)
"target"
 must target lights
*/
/*QUAKED trap_spikeshooter (0 .5 .8) (-8 -8 -8) (8 8 8) superspike laser lightning x x x x onlystrike
When triggered, fires a spike in
the direction determined by angle.

Flags:
"superspike"
 fires large spikes
"laser"
 fires laser
"lightning"
 fires lightning
 (only fires with a target,
  either an info_target or when
  striking something)
"onlystrike"
 does not fire unless striking
 at something

Keys:
"deathtype"
 as with nearly all things in
 Dark Places, deathtype is
 the kill message.
 default: depends on shot type
"angle"
 angle to fire
 (can be pitch yaw roll)
"target"
 much better than angle setting.
"speed"
 speed of shot - default 500
 (not applicable to lightning)
"dmg"
 how much damage the shot does
 default depends on shot:
 spike - 9
 superspike - 18
 laser - 15
 lightning - 30
"count"
 how many shots are fired per
 burst.
"delay"
 time between shots in a burst.
"strikedist"
 max distance for striking.
 (meaning it acts as a turret)
*/
/*QUAKED viewthing (0 .5 .8) (-8 -8 -8) (8 8 8)
Just for the debugging level.  Don't use
*/


/*QUAKED misc_teleporttrain (0 .5 .8) (-8 -8 -8) (8 8 8)
This is used for the final boss
*/


/*QUAKED effect_spinningspotlight (0 1 0) (-8 -8 -8) (8 8 8)
A spinning spot light,
nifty disco like effects or anything
else you think up.

Keys:
"angles"
 starting direction in degrees (pitch yaw roll)
"avelocity"
 rotation speed in degrees per second (pitch yaw roll)
*/




//=================================================================================================
//===========================================================
//    battleMETAL  Debug Objects
//===========================================================
/*QUAKED debug_particles (0.988 0.267 0.553) (-3 -3 -3) (3 3 3) START_OFF LIFETIME REACTIVATE REMOVE_FIRSTUSE
  Debugger for particle effects
  
-------- KEYS -------- 
  .vec_name = <string> [effecinfo.txt name] - the particle effect to spawn
  .compOffset = <vector> [endpoint] - if effect needs an endpoint, the origin of effect is the map object's origin
  .dest1 = <vector> [speed] -if effect needs a velocity vector
  .count = <float> [particle amount] - total number of particles in the effect
  .data_lifetime = <float> - time to live, use with spawnflags[2]
  .aState = <float> - recharge delay - how long to wait before reactivating, use with spawnflags[4]
  .count2 = <float> - speed, rate of particle cycle
  .count3 = <bool> - 0 = pointparticle, 1 = trailparticle
  .count4 = <float> - velocity multiplier
-------- SPAWNFLAGS -------- 
START_OFF 1: only activated by trigger
LIFETIME 2: 
REACTIVATE 4: reactivate after countdown
REMOVE_FIRSTUSE 8: remove after first countdown
*/







/*QUAKED map_unlock_items (0.753 0.788 0.431) (-32 -32 -64) (32 32 64) - ONTOUCH
DEPRECATED - UNSTABLE
 will provide unlocked mechs and items to player.
  + format is space-separated values
  + each value is the UID of the mech or item.
-------- KEYS -------- 
.targetname = <string> call by trigger.
.target = <string> will fire other triggers after being used.
.unlockMechs = <string> a space-separated list of mech UIDs
.unlockEquip = <string>a space-separated list of item UIDs
-------- SPAWNFLAGS --------
ONTOUCH 2 : will fire ontouch instead of by targetname.
*/

/*QUAKED map_projectile_shooter (0.8 0.45 0.25) (-10 -10 -10) (10 10 10) START_OFF LIFETIME REACTIVATE REMOVE_FIRSTUSE DRAW_MODEL LIMITED_FIRE
Mostly for debug, but could be handy in-general.
Projectile Shooter that uses weapons-fire.
  
-------- KEYS -------- 
.data_idx = <float> [weapon id] - the weapon to use
.count = <float> [particle amount] - set a max number of shots
.count3 = <float> [rate of fire] - interval to try next shot;
.data_lifetime = <float> - time to live, use with spawnflags[2]
.wait = <float> - recharge delay - how long to wait before reactivating, use with spawnflags[4]

-------- SPAWNFLAGS --------
START_OFF 1: START_OFF - only activated by trigger
LIFETIME 2: lifetime
REACTIVATE 4: reactivate after countdown
REMOVE_FIRSTUSE 8: remove after first countdown
DRAW_MODEL 16: draw the whole weapon model
LIMITED_FIRE 32: use limited number of shots
*/







